import { useState } from "react"
import { useDispatch, useSelector } from "react-redux"
import { NavLink } from "react-router-dom"
import { SearchBar } from "./search-bar"
import { setFilter } from '../store/actions/general.actions'
import { toggleMenu } from "../store/actions/general.actions"
import { useNavigate } from "react-router-dom"

export function Header(props) {
    const dispatch = useDispatch()
    const navigate = useNavigate()
    const [headerMode, setHeaderMode] = useState('')
    const [isSearch, setIsSearch] = useState(false)

    const user = useSelector((state) => state.user)
    const { filter } = useSelector((storeState) => storeState.generalModule)

    let isMobile = window.innerWidth < 930 ? true : false

    const resetFilter = () => {
        dispatch(setFilter(''))
    }

    const filterClick = (filterr) => {
        if (filterr === filter.search) resetFilter()
        else dispatch(setFilter({ search: filterr }))
        setHeaderMode('')
        navigate('/')
    }

    return (
        <>
            {!isMobile && <nav className={`header ${props.mode.type} noselect`}>

                <NavLink onClick={resetFilter} className={`undecorate ${props.mode.type} hover-main`} to='/'><img className="logo" src={require('../style/imgs/logo.png')} /></NavLink>

                {isSearch ? <> <div className="screen" onClick={() => { setIsSearch(false) }}></div> <SearchBar mode={props.mode} addX={true} setIsSearch={setIsSearch} /> </> :

                    <div className="search-placeholder">
                        <button className={props.mode.type} onClick={() => setIsSearch(true)}><img className="search-icon" src={require('../style/imgs/search-icon.png')} /></button></div>}
                <div className="left-bar">
                    <svg onClick={() => { filterClick('valorant') }} width="30" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg" className={`clickable hover-main-svg ${filter.search === 'valorant' ? 'sec-svg' : ''}`}>
                        <g clipPath="url(#clip0_424_18342)">
                            <path d="M39.6533 3.58674C39.5879 3.61797 39.5316 3.66563 39.49 3.72507C33.85 10.7751 28.2083 17.8251 22.5733 24.8751C22.395 25.0301 22.5317 25.3551 22.7717 25.3167C26.8367 25.3217 30.9 25.3167 34.965 25.3184C35.1405 25.3275 35.3156 25.2944 35.4756 25.2219C35.6357 25.1494 35.7761 25.0396 35.885 24.9017C37.175 23.2901 38.4683 21.6784 39.7583 20.0634C39.9354 19.8297 40.0208 19.5391 39.9983 19.2467C39.995 14.1184 39.9983 8.99174 39.9933 3.86341C40.02 3.68007 39.8267 3.52007 39.6533 3.58507V3.58674ZM0.128334 3.61007C3.42727e-07 3.6734 0.00500036 3.83007 0.00166702 3.95174C0.00500036 9.07507 0.00333369 14.2017 0.00333369 19.3267C-0.00782048 19.6077 0.0860557 19.8828 0.266667 20.0984L13 36.0151C13.2 36.2684 13.5133 36.4317 13.8417 36.4267C17.9333 36.4267 22.025 36.4317 26.1167 36.4267C26.3533 36.4601 26.4867 36.1367 26.31 35.9851C17.7683 25.2934 9.21 14.6101 0.666667 3.91674C0.533334 3.76007 0.376667 3.4634 0.13 3.61007H0.128334Z" fill="white" fillOpacity="0.9" />
                        </g>
                        <defs>
                            <clipPath id="clip0_424_18342">
                                <rect width="40" height="40" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                    <svg onClick={() => { filterClick('fifa') }} width="30" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg" className={`clickable hover-main-svg ${filter.search === 'fifa' ? 'sec-svg' : ''}`}>
                        <mask id="mask0_424_18349" style={{ maskType: 'alpha' }} maskUnits="userSpaceOnUse" x="0" y="0" width="40" height="40">
                            <path fillRule="evenodd" clipRule="evenodd" d="M18.4606 0.0247083C11.4409 0.607171 5.34785 4.6721 2.14326 10.9109C1.102 12.9381 0.395295 15.2607 0.0943981 17.6448C-0.0472897 18.7678 -0.0257145 21.5188 0.133277 22.5991C0.684607 26.3435 2.00324 29.4843 4.22384 32.3421C4.89955 33.2117 6.37435 34.7094 7.30795 35.4741C14.0401 40.9885 23.5197 41.5136 30.8049 36.7756C31.9886 36.0058 32.7335 35.4078 33.8009 34.3706C36.5374 31.7114 38.3605 28.5898 39.2786 24.9915C41.4009 16.6731 38.0872 8.04387 30.9452 3.29005C28.5571 1.70056 25.7589 0.632294 22.8256 0.190288C21.8878 0.0489625 19.3351 -0.0478371 18.4606 0.0247083ZM28.8745 15.5251C31.0114 18.9187 32.7597 21.7124 32.7597 21.7334C32.7597 21.7545 32.0961 21.7717 31.2849 21.7717H29.8102L29.0208 20.5228L28.2314 19.2738L25.8982 19.2547C24.6148 19.2442 23.5648 19.221 23.5648 19.203C23.5648 19.1511 24.9471 16.9703 25.0672 16.8328C25.1532 16.7342 25.3228 16.7042 25.8846 16.688L26.5936 16.6674L25.7213 15.2723L24.8491 13.8771L22.3895 17.8244L19.93 21.7717H13.4213C9.84161 21.7717 6.91272 21.7575 6.91272 21.7401C6.91272 21.7227 7.61059 20.6069 8.46361 19.2604L10.0144 16.8122L8.89092 16.7922C7.93878 16.7753 7.77371 16.7561 7.80824 16.6661C7.83061 16.6077 8.1819 16.0384 8.58879 15.4009L9.32858 14.242H14.1646H19.0007L18.2103 15.4909L17.4199 16.7398L15.2316 16.776L13.0433 16.8122L12.2964 17.9706C11.8856 18.6078 11.5488 19.1534 11.5479 19.1833C11.5471 19.2132 13.1045 19.2376 15.009 19.2376H18.4715L21.6517 14.2089C24.0236 10.4584 24.8518 9.20242 24.9106 9.26758C24.9538 9.31565 26.7377 12.1315 28.8745 15.5251ZM22.6839 9.31232C22.6707 9.3486 22.334 9.90116 21.9358 10.5403L21.2118 11.7023L16.0895 11.7052C13.2722 11.7067 10.9671 11.6929 10.9671 11.6744C10.9671 11.6367 12.3209 9.47877 12.4335 9.33687C12.4897 9.26599 13.6122 9.24637 17.6067 9.24637C20.6446 9.24637 22.6984 9.27301 22.6839 9.31232ZM9.80563 23.187C10.2 23.4178 10.3412 23.6696 10.3751 24.2017L10.4053 24.6754L9.98728 24.6534C9.57054 24.6316 9.56895 24.6306 9.47041 24.3419C9.33025 23.9314 9.21448 23.8713 8.5641 23.8713C7.83872 23.8713 7.70912 23.9755 7.70912 24.5591C7.70912 25.1775 7.81591 25.2469 8.76719 25.2469C9.42306 25.2469 9.57684 25.2701 9.81699 25.405C10.2488 25.6477 10.3879 26.0047 10.3879 26.8698C10.3879 27.698 10.2836 27.9886 9.89019 28.2559C9.64403 28.4232 9.57452 28.4325 8.57185 28.4325C7.59191 28.4325 7.49511 28.4204 7.26734 28.2682C6.93082 28.0434 6.76813 27.69 6.76806 27.1836L6.76792 26.7673H7.19428H7.62058L7.67097 27.0388C7.75705 27.5026 7.86334 27.5637 8.58401 27.5637C9.38889 27.5637 9.44674 27.5158 9.44674 26.8484C9.44674 26.1398 9.4311 26.1289 8.38383 26.1021C7.42836 26.0776 7.28558 26.0256 6.95341 25.5812C6.73396 25.2877 6.69776 24.022 6.89831 23.6564C7.1932 23.1187 7.53529 23.0011 8.72722 23.0272C9.40395 23.0421 9.61044 23.0727 9.80563 23.187ZM14.5072 23.1835C15.0065 23.4776 15.0578 23.6213 15.0578 24.7273C15.0578 25.6356 15.0445 25.7362 14.8963 25.9439C14.6261 26.3227 14.3517 26.4053 13.3635 26.4053H12.4876V27.4189V28.4325H12.017H11.5464V25.7107V22.9889L12.9039 23.0138C14.1039 23.0358 14.2899 23.0555 14.5072 23.1835ZM23.7818 23.1874C23.9211 23.2692 24.1084 23.4451 24.1981 23.5782C24.3427 23.7927 24.3612 23.9104 24.3612 24.6132C24.3612 25.519 24.2668 25.8099 23.8892 26.0665L23.6551 26.2255L24.1166 27.311C24.3705 27.9079 24.5783 28.4045 24.5783 28.4144C24.5784 28.4243 24.3542 28.4325 24.0801 28.4325H23.5818L23.157 27.3839L22.7322 26.3354L22.2797 26.3341L21.8272 26.3329V27.3827V28.4325H21.3204H20.8136V25.7658C20.8136 24.299 20.838 23.0744 20.8679 23.0443C20.8978 23.0143 21.5087 23.0007 22.2254 23.0141C23.3831 23.0359 23.5569 23.0553 23.7818 23.1874ZM28.6691 23.4731V23.9075L27.9994 23.9283L27.3297 23.9491V26.1908V28.4325H26.8229H26.3161V26.1908V23.9491L25.6464 23.9283L24.9767 23.9075L24.9542 23.5547C24.9165 22.9614 24.789 22.9976 26.8392 23.0193L28.6691 23.0387V23.4731ZM32.3958 23.1877C32.7889 23.4178 32.9303 23.67 32.9641 24.2017L32.9943 24.6754L32.5762 24.6534C32.1595 24.6316 32.1579 24.6306 32.0594 24.3419C31.9194 23.9321 31.803 23.8713 31.1582 23.8713C30.405 23.8713 30.2267 24.0605 30.3205 24.76C30.3789 25.1951 30.4923 25.2469 31.3872 25.2469C32.0685 25.2469 32.1872 25.266 32.3984 25.4098C32.8707 25.7312 32.9383 25.896 32.9642 26.7905C32.9861 27.5412 32.9755 27.6182 32.8178 27.8516C32.7242 27.99 32.5377 28.1774 32.4034 28.2679C32.1793 28.4189 32.0784 28.4325 31.1841 28.4325C30.3287 28.4325 30.1762 28.4139 29.9394 28.2809C29.5765 28.077 29.4186 27.7832 29.3742 27.2296L29.337 26.7673H29.7757C30.2121 26.7673 30.2144 26.7685 30.2633 27.0026C30.3707 27.5181 30.4461 27.5637 31.1903 27.5637C31.6161 27.5637 31.8937 27.5319 31.9488 27.4768C32.0012 27.4245 32.0357 27.1712 32.0357 26.8397C32.0357 26.5083 32.0012 26.2549 31.9488 26.2026C31.8922 26.146 31.5951 26.1157 31.0954 26.1157C30.1303 26.1157 29.7751 25.9692 29.5149 25.4641C29.3672 25.1775 29.3502 25.0578 29.3733 24.4695C29.4015 23.7561 29.481 23.5669 29.8771 23.2712C30.1607 23.0594 30.4788 23.007 31.3536 23.0279C31.9929 23.0432 32.2044 23.0756 32.3958 23.1877ZM19.131 23.2193C19.2608 23.2984 19.4316 23.4693 19.5108 23.5991C19.6446 23.8185 19.6547 23.9668 19.6549 25.7076C19.6552 27.481 19.6471 27.5946 19.5019 27.853C19.234 28.3297 18.9465 28.4325 17.8814 28.4325C17.0647 28.4325 16.9275 28.4143 16.675 28.2724C16.5182 28.1843 16.3183 27.997 16.2307 27.8561C16.0804 27.6144 16.0701 27.5038 16.0478 25.8985C16.023 24.1124 16.0566 23.8304 16.3367 23.4744C16.5971 23.1433 16.8465 23.0808 17.9176 23.078C18.7683 23.0757 18.9256 23.0941 19.131 23.2193ZM33.5018 23.2676C33.4521 23.2877 33.4113 23.3992 33.4113 23.5153C33.4113 23.6315 33.3787 23.7265 33.3389 23.7265C33.2991 23.7265 33.2665 23.6311 33.2665 23.5146C33.2665 23.3737 33.2241 23.2916 33.1398 23.2696C33.0702 23.2514 33.1434 23.2352 33.3027 23.2338C33.462 23.2323 33.5516 23.2475 33.5018 23.2676ZM33.8747 23.3524C33.8707 23.3989 33.8626 23.502 33.8566 23.5817C33.8375 23.8368 33.7009 23.7363 33.7009 23.4671C33.7009 23.2916 33.7302 23.2174 33.7914 23.2378C33.8412 23.2544 33.8787 23.306 33.8747 23.3524ZM34.2729 23.4912C34.2667 23.7237 34.2585 23.7367 34.2153 23.5817C34.1713 23.4238 34.1584 23.4175 34.1144 23.5319C34.0628 23.6662 33.9181 23.6375 33.9181 23.4929C33.9181 23.4488 33.9396 23.4343 33.9659 23.4606C33.9922 23.4868 34.0592 23.4434 34.1148 23.364C34.2566 23.1616 34.2811 23.1814 34.2729 23.4912ZM12.4876 24.7831V25.6224L13.2175 25.5976C14.1137 25.567 14.1528 25.532 14.1528 24.7577C14.1528 23.9497 14.1461 23.9437 13.2452 23.9437H12.4876V24.7831ZM17.1237 24.0837C17.0788 24.1678 17.0488 24.8438 17.0488 25.7739C17.0488 27.6387 17.0134 27.5637 17.894 27.5637C18.7448 27.5637 18.714 27.6313 18.714 25.7614C18.714 24.8399 18.684 24.1676 18.6391 24.0837C18.5731 23.9605 18.4823 23.9437 17.8814 23.9437C17.2805 23.9437 17.1897 23.9605 17.1237 24.0837ZM21.8272 24.7039V25.4641H22.5109C23.3453 25.4641 23.42 25.3999 23.42 24.683C23.42 23.9622 23.3983 23.9437 22.5487 23.9437H21.8272V24.7039Z" fill="#ffffff" />
                        </mask>
                        <g mask="url(#mask0_424_18349)">
                            <circle cx="20.0121" cy="20" r="20" fill="#ffffff" />
                        </g>
                    </svg>

                    <svg onClick={() => { filterClick('sport') }} width="30" height="41" viewBox="0 0 41 41" fill="none" xmlns="http://www.w3.org/2000/svg" className={`clickable hover-main-svg ${filter.search === 'sport' ? 'sec-svg' : ''}`}>
                        <path d="M30.2156 37.5994C30.6342 37.3738 36.5806 34.0854 38.4003 28.3922C38.6534 28.0398 39.6096 26.5093 39.9287 23.1674C40.1369 21.6473 40.2197 20.1127 40.1762 18.579L40.1759 18.573C40.1696 18.3796 40.03 14.6097 38.0063 11.1047C37.8527 10.8385 37.6851 10.5843 37.5169 10.3342L37.5215 10.3315C36.0368 7.62537 33.8166 5.36775 32.1707 4.18494C30.7105 3.13583 28.7264 2.18059 28.5776 2.11485C26.3437 0.784237 19.7806 -0.395539 17.2726 0.659084C15.0625 0.347015 7.64926 3.29995 4.74739 7.89361C-0.155617 12.7705 0.282566 20.22 0.325617 20.8079C0.308549 21.1903 0.17997 25.4622 2.41293 29.3298C2.5066 29.492 3.01865 30.5042 3.22065 30.8541C5.63428 35.0346 12.1576 39.5282 15.2145 39.4923C19.8776 41.5504 27.6601 39.5197 30.2156 37.5994ZM6.794 17.1157C8.51712 13.9123 11.4731 10.9471 12.1607 10.2807C13.2491 10.3512 18.5549 10.7358 20.5527 11.5469C20.8808 12.4698 22.2524 16.3228 23.5547 19.9518C22.7232 20.9822 19.0485 25.5186 17.5257 27.0891C16.518 26.9088 12.6074 26.1729 9.28389 25.1442C7.91794 22.8037 6.96717 18.0303 6.794 17.1157ZM37.5649 27.1132C37.3011 27.2563 36.3417 27.7278 35.0258 27.8979C34.9674 26.7608 34.6538 23.999 33.0694 20.88C33.4811 20.0319 34.8438 16.9481 34.9078 13.2831C35.8514 13.2348 37.0393 13.2403 37.485 13.3871C37.5694 13.4692 37.6828 13.607 37.8168 13.8391C38.6591 15.298 39.159 18.3703 39.2008 18.6387C39.2121 18.9424 39.3882 24.882 37.5649 27.1132ZM12.3293 9.3127C11.5255 7.1418 11.4614 5.61225 11.4666 5.14123C13.7079 2.8673 16.9305 1.79577 17.3959 1.64866C19.1113 1.62514 23.6086 1.78141 25.0224 2.78103C26.1255 4.0263 26.7839 5.99327 27.0229 6.81133C26.0515 7.2821 23.3716 8.65618 20.8605 10.6201C18.7011 9.78385 13.6541 9.40073 12.3293 9.3127ZM36.565 10.6482C36.7881 11.1106 37.0668 11.8173 37.1919 12.3393C36.344 12.2361 35.2046 12.2866 34.6473 12.3212C33.9756 11.5004 31.3298 8.43775 28.0194 6.74793C27.8494 6.12017 27.2852 4.25357 26.2534 2.77315C27.2226 2.72782 28.1072 2.98535 28.1994 3.01446C28.4767 3.13998 33.7422 5.59771 36.5725 10.6439L36.565 10.6482ZM20.9376 34.3706C20.5753 33.6791 19.2211 30.9908 18.2437 27.75C19.8344 26.1026 23.4928 21.5833 24.3237 20.5532C26.9541 20.7857 29.5819 21.0464 32.2067 21.335C33.9225 24.7229 34.0558 27.7205 34.0635 28.3111C32.1025 31.9797 29.2189 34.2011 28.73 34.5596C25.0025 35.3646 21.7317 34.5887 20.9376 34.3706ZM12.7947 2.79487C12.0918 3.26536 11.3898 3.82689 10.7512 4.4781C10.1482 4.57229 9.5582 4.73671 8.99336 4.96801C10.1851 4.11917 11.4585 3.39119 12.7947 2.79487ZM2.52318 16.149C3.86471 16.5353 5.30073 17.1372 5.84936 17.3755C6.06129 18.5079 6.98606 23.1269 8.40837 25.5904C8.0878 26.3351 7.11749 28.7251 6.7413 31.1855C5.11186 30.7298 3.75473 29.4965 3.52015 29.2756C0.685334 24.6562 0.684338 18.5639 2.52318 16.149ZM4.74806 31.3864C5.36542 31.7397 6.09392 32.0588 6.87564 32.2195C7.41131 32.9086 9.81971 35.8028 13.6296 37.4752C13.7195 37.6788 13.8764 38.0093 14.0899 38.3564C11.3767 37.5996 7.01514 34.4491 4.74806 31.3864ZM14.7251 37.4993C18.0456 36.9733 20.0694 35.7455 20.6945 35.3161C21.5863 35.5648 24.815 36.3211 28.6281 35.5738C28.8693 36.2182 28.9404 36.6867 28.9614 36.9163C28.7668 37.1126 28.294 37.5256 27.4508 37.9332C24.2826 39.1696 19.0336 40.154 15.5528 38.5795C15.2588 38.389 14.9541 37.9306 14.7251 37.4993Z" fill="#FFFFFF" />
                    </svg>
                    <NavLink to="/register">
                        <svg width="30" height="37" viewBox="0 0 41 37" fill="none" xmlns="http://www.w3.org/2000/svg" className="clickable hover-main-svg gradient">
                            <path d="M40.6409 7.27273H23.2045L29.1863 1.29091L27.9136 0L20.6409 7.27273L13.3681 0L12.0772 1.29091L18.0772 7.27273H0.640869V36.3636H40.6409V7.27273ZM37.0045 32.7273H4.27723V10.9091H37.0045V32.7273ZM15.1863 14.5455V29.0909L27.9136 21.8182L15.1863 14.5455Z" fill="#ffffff" />
                        </svg>
                    </NavLink>

                    <NavLink to='/profile'>
                        {(user && user.image) ? <img className='header-user-img' src={user.image} /> :
                            <svg width="30" height="40" viewBox="0 0 41 40" fill="none" xmlns="http://www.w3.org/2000/svg" className="clickable hover-main-svg">
                                <g clipPath="url(#clip0_424_10288)">
                                    <path fillRule="evenodd" clipRule="evenodd" d="M27.9136 14.5457C27.9136 16.4745 27.1474 18.3244 25.7835 19.6883C24.4196 21.0522 22.5697 21.8184 20.6409 21.8184C18.712 21.8184 16.8622 21.0522 15.4983 19.6883C14.1344 18.3244 13.3681 16.4745 13.3681 14.5457C13.3681 12.6168 14.1344 10.767 15.4983 9.40308C16.8622 8.03918 18.712 7.27295 20.6409 7.27295C22.5697 7.27295 24.4196 8.03918 25.7835 9.40308C27.1474 10.767 27.9136 12.6168 27.9136 14.5457ZM24.2772 14.5457C24.2772 15.5101 23.8941 16.435 23.2122 17.117C22.5302 17.7989 21.6053 18.182 20.6409 18.182C19.6764 18.182 18.7515 17.7989 18.0696 17.117C17.3876 16.435 17.0045 15.5101 17.0045 14.5457C17.0045 13.5813 17.3876 12.6563 18.0696 11.9744C18.7515 11.2924 19.6764 10.9093 20.6409 10.9093C21.6053 10.9093 22.5302 11.2924 23.2122 11.9744C23.8941 12.6563 24.2772 13.5813 24.2772 14.5457Z" fill="white" fillOpacity="0.9" />
                                    <path fillRule="evenodd" clipRule="evenodd" d="M20.6409 0C9.59542 0 0.640869 8.95455 0.640869 20C0.640869 31.0455 9.59542 40 20.6409 40C31.6863 40 40.6409 31.0455 40.6409 20C40.6409 8.95455 31.6863 0 20.6409 0ZM4.27723 20C4.27723 23.8 5.5736 27.2982 7.74632 30.0764C9.2722 28.0725 11.2407 26.4486 13.498 25.3315C15.7554 24.2143 18.2404 23.6342 20.7591 23.6364C23.2451 23.634 25.6989 24.1991 27.9335 25.2887C30.168 26.3783 32.1244 27.9635 33.6536 29.9236C35.229 27.8575 36.2897 25.4458 36.748 22.8883C37.2062 20.3308 37.0489 17.701 36.289 15.2163C35.5292 12.7317 34.1885 10.4637 32.3781 8.60007C30.5677 6.73641 28.3395 5.33065 25.8779 4.49911C23.4163 3.66756 20.7921 3.43413 18.2224 3.81813C15.6527 4.20214 13.2114 5.19253 11.1004 6.70737C8.9895 8.22221 7.26962 10.2179 6.0831 12.5294C4.89659 14.8409 4.27756 17.4018 4.27723 20ZM20.6409 36.3636C16.8844 36.3693 13.2414 35.077 10.3281 32.7055C11.5007 31.0268 13.0615 29.6562 14.8776 28.7103C16.6937 27.7645 18.7114 27.2713 20.7591 27.2727C22.7812 27.2711 24.7745 27.752 26.5735 28.6753C28.3724 29.5987 29.9252 30.9379 31.1027 32.5818C28.1669 35.0304 24.4637 36.369 20.6409 36.3636Z" fill="white" fillOpacity="0.9" />
                                </g>
                                <defs>
                                    <clipPath id="clip0_424_10288">
                                        <rect width="40" height="40" fill="white" transform="translate(0.640869)" />
                                    </clipPath>
                                </defs>
                            </svg>
                        }
                    </NavLink>
                    <span className="material-symbols-outlined menu-icon clickable hover-main" onClick={() => dispatch(toggleMenu())}>menu</span>
                </div>
            </nav>}

            {isMobile && <>
                <nav className={`header ${props.mode.type} noselect`}>
                    {headerMode === 'search' ? <div className="mobile-search-wrapper">
                        <span onClick={() => { setHeaderMode('') }} className="material-symbols-outlined">arrow_back_ios_new</span>
                        <SearchBar mode={props.mode} />
                    </div> : <>
                        <NavLink onClick={resetFilter} to='/'><img className="logo" src={require('../style/imgs/logo.png')} /></NavLink>
                        <div className="header-mobile-bar">
                            <span className="material-symbols-outlined search-icon" onClick={() => setHeaderMode('search')}>search</span>
                            <img onClick={() => { setHeaderMode('games-bar') }} className="games-menu" src={require('../style/imgs/games-menu.png')} />
                            <span className="material-symbols-outlined menu-icon clickable hover-main" onClick={() => dispatch(toggleMenu())}>menu</span>
                        </div>
                        {headerMode === 'games-bar' && <div className={'games-bar' + ' ' + props.mode.type}>
                            <img onClick={() => { filterClick('valorant') }} className="bar-logo" src={require('../style/imgs/valorant-logo.png')} />
                            <img onClick={() => { filterClick('fifa') }} className="bar-logo fifa" src={require('../style/imgs/fifa-logo.png')} />
                            <img onClick={() => { filterClick('sport') }} className="bar-logo" src={require('../style/imgs/sport-logo.png')} />
                            <span onClick={() => { setHeaderMode('') }} className="material-symbols-outlined">expand_less</span>
                        </div>}
                    </>}
                </nav>

                <nav className={`footer-mobile ${props.mode.type}`}>
                    <NavLink onClick={resetFilter} to='/'><img src={require(`../style/imgs/home-icon-${props.mode.type}.png`)} /></NavLink>
                    <NavLink onClick={resetFilter} to='/'><img src={require(`../style/imgs/stream-icon-${props.mode.type}.png`)} /></NavLink>
                    <NavLink to='/profile'><img className='user-img circle' src={(user && user.image) ? user.image : require('../style/imgs/user-icon.png')} /></NavLink>
                </nav></>}
        </>
    )
}